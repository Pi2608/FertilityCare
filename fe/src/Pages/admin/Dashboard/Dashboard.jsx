"use client"

import { useState } from "react"
import "./Dashboard.css"

const Dashboard = () => {
  const [timeRange, setTimeRange] = useState("thisMonth") // thisMonth, lastMonth, thisYear
  const [dashboardData, setDashboardData] = useState({
    totalPatients: 1247,
    totalDoctors: 23,
    totalAppointments: 856,
    totalRevenue: 2450000000,
    newPatientsThisMonth: 89,
    completedAppointments: 734,
    pendingAppointments: 122,
    activeServices: 12,
    // Th√™m th·ªëng k√™ t√†i kho·∫£n
    totalAccounts: 1285, // T·ªïng s·ªë t√†i kho·∫£n (b·ªánh nh√¢n + b√°c sƒ© + admin + manager)
    activeAccounts: 1198, // T√†i kho·∫£n ƒëang ho·∫°t ƒë·ªông
    inactiveAccounts: 87, // T√†i kho·∫£n kh√¥ng ho·∫°t ƒë·ªông
    newAccountsThisMonth: 94, // T√†i kho·∫£n m·ªõi th√°ng n√†y
  })

  const [recentActivities, setRecentActivities] = useState([
    {
      id: 1,
      type: "appointment",
      message: "L·ªãch h·∫πn m·ªõi ƒë∆∞·ª£c t·∫°o b·ªüi Nguy·ªÖn Th·ªã Mai",
      time: "5 ph√∫t tr∆∞·ªõc",
      icon: "üìÖ",
    },
    {
      id: 2,
      type: "doctor",
      message: "B√°c sƒ© Tr·∫ßn VƒÉn Nam ƒë√£ ho√†n th√†nh 3 ca ƒëi·ªÅu tr·ªã",
      time: "15 ph√∫t tr∆∞·ªõc",
      icon: "üë®‚Äç‚öïÔ∏è",
    },
    {
      id: 3,
      type: "patient",
      message: "B·ªánh nh√¢n m·ªõi ƒëƒÉng k√Ω: L√™ Th·ªã Hoa",
      time: "30 ph√∫t tr∆∞·ªõc",
      icon: "üë•",
    },
    {
      id: 4,
      type: "system",
      message: "Backup d·ªØ li·ªáu h·ªá th·ªëng ho√†n t·∫•t",
      time: "1 gi·ªù tr∆∞·ªõc",
      icon: "üíæ",
    },
    {
      id: 5,
      type: "revenue",
      message: "Doanh thu h√¥m nay: 45,000,000 VNƒê",
      time: "2 gi·ªù tr∆∞·ªõc",
      icon: "üí∞",
    },
  ])

  const [monthlyStats, setMonthlyStats] = useState([
    { month: "T1", appointments: 65, revenue: 180 },
    { month: "T2", appointments: 78, revenue: 220 },
    { month: "T3", appointments: 82, revenue: 245 },
    { month: "T4", appointments: 91, revenue: 280 },
    { month: "T5", appointments: 87, revenue: 265 },
    { month: "T6", appointments: 95, revenue: 310 },
  ])

  const formatCurrency = (amount) => {
    return new Intl.NumberFormat("vi-VN", {
      style: "currency",
      currency: "VND",
    }).format(amount)
  }

  const formatNumber = (number) => {
    return new Intl.NumberFormat("vi-VN").format(number)
  }

  return (
    <div className="admin-dashboard">
      {/* Header */}
      <header className="dashboard-header">
        <div className="header-content">
          <h1 className="page-title">B√°o c√°o th·ªëng k√™</h1>
          <div className="header-actions">
            <select value={timeRange} onChange={(e) => setTimeRange(e.target.value)} className="time-range-select">
              <option value="thisMonth">Th√°ng n√†y</option>
              <option value="lastMonth">Th√°ng tr∆∞·ªõc</option>
              <option value="thisYear">NƒÉm n√†y</option>
            </select>

            <div className="user-profile">
              <div className="avatar">
                <span>JC</span>
              </div>
              <div className="user-info">
                <div className="user-name">Jonitha Cathrine</div>
                <div className="user-role">Admin</div>
              </div>
            </div>
          </div>
        </div>
      </header>

      {/* Main Content */}
      <main className="dashboard-content">
        {/* Stats Cards */}
        <div className="stats-grid">
          <div className="stat-card primary">
            <div className="stat-icon">üìä</div>
            <div className="stat-content">
              <h3>T·ªïng t√†i kho·∫£n</h3>
              <div className="stat-number">{formatNumber(dashboardData.totalAccounts)}</div>
              <div className="stat-change positive">+{dashboardData.newAccountsThisMonth} th√°ng n√†y</div>
            </div>
          </div>

          <div className="stat-card success">
            <div className="stat-icon">‚úÖ</div>
            <div className="stat-content">
              <h3>T√†i kho·∫£n ho·∫°t ƒë·ªông</h3>
              <div className="stat-number">{formatNumber(dashboardData.activeAccounts)}</div>
              <div className="stat-change positive">
                {((dashboardData.activeAccounts / dashboardData.totalAccounts) * 100).toFixed(1)}% t·ªïng s·ªë
              </div>
            </div>
          </div>

          <div className="stat-card warning">
            <div className="stat-icon">‚è∏Ô∏è</div>
            <div className="stat-content">
              <h3>T√†i kho·∫£n kh√¥ng ho·∫°t ƒë·ªông</h3>
              <div className="stat-number">{formatNumber(dashboardData.inactiveAccounts)}</div>
              <div className="stat-change negative">
                {((dashboardData.inactiveAccounts / dashboardData.totalAccounts) * 100).toFixed(1)}% t·ªïng s·ªë
              </div>
            </div>
          </div>

          <div className="stat-card info">
            <div className="stat-icon">üí∞</div>
            <div className="stat-content">
              <h3>Doanh thu</h3>
              <div className="stat-number">{formatCurrency(dashboardData.totalRevenue)}</div>
              <div className="stat-change positive">+8.5% so v·ªõi th√°ng tr∆∞·ªõc</div>
            </div>
          </div>
        </div>

        {/* Charts and Tables Section */}
        <div className="dashboard-grid">
          {/* Monthly Statistics Chart */}
          <div className="dashboard-card chart-card">
            <div className="card-header">
              <h3>Th·ªëng k√™ theo th√°ng</h3>
              <div className="chart-legend">
                <div className="legend-item">
                  <span className="legend-color appointments"></span>
                  <span>L·ªãch h·∫πn</span>
                </div>
                <div className="legend-item">
                  <span className="legend-color revenue"></span>
                  <span>Doanh thu (tri·ªáu VNƒê)</span>
                </div>
              </div>
            </div>
            <div className="chart-container">
              <div className="chart">
                {monthlyStats.map((stat, index) => (
                  <div key={index} className="chart-bar-group">
                    <div className="chart-bars">
                      <div
                        className="chart-bar appointments"
                        style={{ height: `${(stat.appointments / 100) * 100}%` }}
                      ></div>
                      <div className="chart-bar revenue" style={{ height: `${(stat.revenue / 350) * 100}%` }}></div>
                    </div>
                    <div className="chart-label">{stat.month}</div>
                  </div>
                ))}
              </div>
            </div>
          </div>

          {/* Quick Stats */}
          <div className="dashboard-card quick-stats">
            <div className="card-header">
              <h3>Th·ªëng k√™ nhanh</h3>
            </div>
            <div className="quick-stats-grid">
              <div className="quick-stat-item">
                <div className="quick-stat-label">B·ªánh nh√¢n</div>
                <div className="quick-stat-value">{formatNumber(dashboardData.totalPatients)}</div>
                <div className="quick-stat-percentage">97.0% t·ªïng t√†i kho·∫£n</div>
              </div>
              <div className="quick-stat-item">
                <div className="quick-stat-label">B√°c sƒ©</div>
                <div className="quick-stat-value">{dashboardData.totalDoctors}</div>
                <div className="quick-stat-percentage">1.8% t·ªïng t√†i kho·∫£n</div>
              </div>
              <div className="quick-stat-item">
                <div className="quick-stat-label">Qu·∫£n tr·ªã vi√™n</div>
                <div className="quick-stat-value">15</div>
                <div className="quick-stat-percentage">1.2% t·ªïng t√†i kho·∫£n</div>
              </div>
              <div className="quick-stat-item">
                <div className="quick-stat-label">T·ª∑ l·ªá ho·∫°t ƒë·ªông</div>
                <div className="quick-stat-value">
                  {((dashboardData.activeAccounts / dashboardData.totalAccounts) * 100).toFixed(1)}%
                </div>
                <div className="quick-stat-percentage">T·ª∑ l·ªá t√†i kho·∫£n active</div>
              </div>
            </div>
          </div>

          {/* Recent Activities */}
          <div className="dashboard-card activities-card">
            <div className="card-header">
              <h3>Ho·∫°t ƒë·ªông g·∫ßn ƒë√¢y</h3>
              <button className="view-all-btn">Xem t·∫•t c·∫£</button>
            </div>
            <div className="activities-list">
              {recentActivities.map((activity) => (
                <div key={activity.id} className="activity-item">
                  <div className="activity-icon">{activity.icon}</div>
                  <div className="activity-content">
                    <div className="activity-message">{activity.message}</div>
                    <div className="activity-time">{activity.time}</div>
                  </div>
                </div>
              ))}
            </div>
          </div>

          {/* System Status */}
          <div className="dashboard-card system-status">
            <div className="card-header">
              <h3>Tr·∫°ng th√°i h·ªá th·ªëng</h3>
            </div>
            <div className="status-list">
              <div className="status-item">
                <div className="status-indicator online"></div>
                <div className="status-content">
                  <div className="status-label">Server ch√≠nh</div>
                  <div className="status-value">Ho·∫°t ƒë·ªông b√¨nh th∆∞·ªùng</div>
                </div>
              </div>
              <div className="status-item">
                <div className="status-indicator online"></div>
                <div className="status-content">
                  <div className="status-label">C∆° s·ªü d·ªØ li·ªáu</div>
                  <div className="status-value">K·∫øt n·ªëi ·ªïn ƒë·ªãnh</div>
                </div>
              </div>
              <div className="status-item">
                <div className="status-indicator warning"></div>
                <div className="status-content">
                  <div className="status-label">Backup t·ª± ƒë·ªông</div>
                  <div className="status-value">C·∫ßn ki·ªÉm tra</div>
                </div>
              </div>
              <div className="status-item">
                <div className="status-indicator online"></div>
                <div className="status-content">
                  <div className="status-label">B·∫£o m·∫≠t</div>
                  <div className="status-value">T·∫•t c·∫£ d·ªãch v·ª• an to√†n</div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </main>
    </div>
  )
}

export default Dashboard
