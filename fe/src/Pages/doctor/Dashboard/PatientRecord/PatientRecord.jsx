import { useState } from "react"
import "./PatientRecord.css"


const PatientRecord = () => {
  const [activeTab, setActiveTab] = useState("overview")
  const [expandedSections, setExpandedSections] = useState({
    medicalHistory: true,
    familyHistory: true,
    allergies: true,
    medicalRecords: false,
    prescribedMeds: false,
  })


  const toggleSection = (section) => {
    setExpandedSections((prev) => ({
      ...prev,
      [section]: !prev[section],
    }))
  }


  const patientData = {
    name: "Nguy·ªÖn Th·ªã Hoa",
    id: "PT-2024-0123",
    status: "ƒêang ƒëi·ªÅu tr·ªã",
    age: 34,
    birthDate: "15/06/1989",
    gender: "N·ªØ",
    phone: "0912345678",
    email: "hoa.nguyen@email.com",
    address: "123 ƒê∆∞·ªùng L√™ L·ª£i, Qu·∫≠n 1, TP.HCM",
    treatment: "IVF Chu k·ª≥ #2",
    startDate: "01/04/2024",
    doctor: "BS. Nguy·ªÖn Lan Anh",
    medicalHistory: [
      "V√¥ sinh nguy√™n ph√°t",
      "L·∫°c n·ªôi m·∫°c t·ª≠ cung nh·∫π",
      "ƒê√£ tr·∫£i qua 1 chu k·ª≥ IVF kh√¥ng th√†nh c√¥ng (12/2023)"
    ],
    familyHistory: [
      "Kh√¥ng c√≥ ti·ªÅn s·ª≠ gia ƒë√¨nh v·ªÅ v√¥ sinh",
      "M·∫π c√≥ ti·ªÅn s·ª≠ l·∫°c n·ªôi m·∫°c t·ª≠ cung"
    ],
    allergies: ["Kh√¥ng c√≥"],
    currentAppointment: {
      date: "",
      time: "",
      status: "",
     
    }
  }


  const tabs = [
    { id: "overview", label: "T·ªïng quan", icon: "üë§" },
    { id: "schedule", label: "L·ªãch h·∫πn", icon: "üìÖ" },
    { id: "notes", label: "Ghi ch√∫ kh√°m", icon: "üìù" },
    { id: "results", label: "K·∫øt qu·∫£ x√©t nghi·ªám", icon: "üìã" },
    { id: "medications", label: "Thu·ªëc", icon: "üíä" },
  ]


  // Data for timeline - linked to other tabs
  const treatmentPhases = [
    {
      id: 1,
      title: "Giai ƒëo·∫°n 1: Chu·∫©n b·ªã",
      period: "01/04 - 30/04/2024",
      status: "completed",
      notes: [
        {
          date: "30/04/2024",
          content: "B·ªánh nh√¢n ƒë√£ ho√†n th√†nh t·∫•t c·∫£ x√©t nghi·ªám c·∫ßn thi·∫øt. K·∫øt qu·∫£ t·ªët, s·∫µn s√†ng cho chu k·ª≥ ƒëi·ªÅu tr·ªã IVF.",
          doctor: "BS. Nguy·ªÖn Lan Anh"
        }
      ],
      results: [
        { name: "AMH", value: "2.8 ng/ml", status: "B√¨nh th∆∞·ªùng", date: "25/04/2024" },
        { name: "FSH", value: "6.2 mIU/ml", status: "T·ªët", date: "25/04/2024" },
        { name: "Si√™u √¢m bu·ªìng tr·ª©ng", value: "12 nang tr·ª©ng", status: "T·ªët", date: "28/04/2024" }
      ],
      medications: [
        { name: "Folic Acid 5mg", usage: "U·ªëng 1 vi√™n/ng√†y, sau ƒÉn", period: "01/04 - 30/04/2024" },
        { name: "Vitamin D3 1000IU", usage: "U·ªëng 1 vi√™n/ng√†y, bu·ªïi s√°ng", period: "01/04 - 30/04/2024" }
      ]
    },
    {
      id: 2,
      title: "Giai ƒëo·∫°n 2: K√≠ch th√≠ch bu·ªìng tr·ª©ng",
      period: "01/05 - 20/05/2024",
      status: "active",
      notes: [
        {
          date: "20/05/2024",
          content: "Ph·∫£n ·ª©ng t·ªët v·ªõi thu·ªëc k√≠ch th√≠ch. Nang tr·ª©ng ph√°t tri·ªÉn ƒë·ªÅu, k√≠ch th∆∞·ªõc ph√π h·ª£p. Chu·∫©n b·ªã trigger shot.",
          doctor: "BS. Nguy·ªÖn Lan Anh"
        },
        {
          date: "15/05/2024",
          content: "Theo d√µi ph·∫£n ·ª©ng k√≠ch th√≠ch. E2 tƒÉng t·ªët, nang tr·ª©ng ph√°t tri·ªÉn ƒë·ªìng ƒë·ªÅu. Ti·∫øp t·ª•c protocol.",
          doctor: "BS. Nguy·ªÖn Lan Anh"
        }
      ],
      results: [
        { name: "E2", value: "1200 pg/ml", status: "T·ªët", date: "18/05/2024" },
        { name: "Si√™u √¢m theo d√µi", value: "8 nang tr·ª©ng >14mm", status: "ƒê·∫°t y√™u c·∫ßu", date: "18/05/2024" },
        { name: "LH", value: "2.1 mIU/ml", status: "·ªîn ƒë·ªãnh", date: "18/05/2024" }
      ],
      medications: [
        { name: "Gonal-F 450 IU", usage: "Ti√™m d∆∞·ªõi da, bu·ªïi t·ªëi (21:00)", period: "01/05 - 18/05/2024" },
        { name: "Cetrotide 0.25mg", usage: "Ti√™m d∆∞·ªõi da, bu·ªïi s√°ng (08:00)", period: "10/05 - 18/05/2024" },
        { name: "Ovitrelle 250mcg", usage: "Ti√™m d∆∞·ªõi da, trigger shot", period: "20/05/2024" }
      ]
    },
    {
      id: 3,
      title: "Giai ƒëo·∫°n 3: L·∫•y tr·ª©ng",
      period: "",
      status: "upcoming",
      notes: [
       
      ],
      results: [],
      medications: []
    }
  ]


  const renderOverviewTab = () => (
    <div className="patient-profile-tab-content">
      <div className="patient-profile-treatment-plan">
        <h3>K·∫ø ho·∫°ch ƒëi·ªÅu tr·ªã</h3>
        <p className="patient-profile-treatment-subtitle">Th√¥ng tin v·ªÅ k·∫ø ho·∫°ch ƒëi·ªÅu tr·ªã hi·ªán t·∫°i</p>


        <div className="patient-profile-treatment-cards">
          <div className="patient-profile-treatment-card patient-profile-current">
            <div className="patient-profile-card-icon">
              <span className="patient-profile-icon-red">‚ö†Ô∏è</span>
            </div>
            <div className="patient-profile-card-content">
              <h4>Giai ƒëo·∫°n hi·ªán t·∫°i</h4>
              <p>K√≠ch th√≠ch bu·ªìng tr·ª©ng</p>
            </div>
          </div>


          <div className="patient-profile-treatment-card patient-profile-next">
            <div className="patient-profile-card-icon">
              <span className="patient-profile-icon-blue">üìÖ</span>
            </div>
            <div className="patient-profile-card-content">
              <h4>Giai ƒëo·∫°n ti·∫øp theo</h4>
              <p>Thu tr·ª©ng</p>
              <span className="patient-profile-date"></span>
            </div>
          </div>
        </div>






        <div className="patient-profile-treatment-timeline">
          <h3>To√†n b·ªô giai ƒëo·∫°n ƒëi·ªÅu tr·ªã</h3>
          <div className="patient-profile-timeline">
            {treatmentPhases.map((phase) => (
              <div key={phase.id} className={`patient-profile-timeline-item patient-profile-${phase.status}`}>
                <div className="patient-profile-timeline-marker">
                  {phase.status === 'completed' ? '‚úì' : phase.status === 'active' ? '‚è≥' : 'üìÖ'}
                </div>
                <div className="patient-profile-timeline-content">
                  <div className="patient-profile-timeline-header">
                    <h4>{phase.title}</h4>
                    <span className="patient-profile-timeline-date">{phase.period}</span>
                  </div>
                  <div className="patient-profile-timeline-details">
                    {/* Ghi ch√∫ */}
                    {phase.notes.length > 0 && (
                      <div className="patient-profile-timeline-section">
                   
                        {phase.notes.map((note, index) => (
                          <div key={index} className="patient-profile-timeline-note">
                            <p><strong>{note.date}:</strong> {note.content}</p>
                            <span className="patient-profile-note-doctor">- {note.doctor}</span>
                          </div>
                        ))}
                      </div>
                    )}


                    {/* K·∫øt qu·∫£ x√©t nghi·ªám */}
                    {phase.results.length > 0 && (
                      <div className="patient-profile-timeline-section">
                        <h5>üìã K·∫øt qu·∫£ x√©t nghi·ªám:</h5>
                        <ul>
                          {phase.results.map((result, index) => (
                            <li key={index}>
                              <strong>{result.name}:</strong> {result.value} ({result.status}) - {result.date}
                            </li>
                          ))}
                        </ul>
                      </div>
                    )}


                    {/* Thu·ªëc s·ª≠ d·ª•ng */}
                    {phase.medications.length > 0 && (
                      <div className="patient-profile-timeline-section">
                        <h5>üíä Thu·ªëc s·ª≠ d·ª•ng:</h5>
                        <ul>
                          {phase.medications.map((med, index) => (
                            <li key={index}>
                              <strong>{med.name}:</strong> {med.usage} ({med.period})
                            </li>
                          ))}
                        </ul>
                      </div>
                    )}


                    {/* Action buttons cho t·ª´ng giai ƒëo·∫°n */}
                    <div className="patient-profile-timeline-actions">
                      {phase.status === 'active' && (
                        <div className="patient-profile-phase-actions">
                          
                          
                        </div>
                      )}
                      {phase.status === 'upcoming' && (
                        <div className="patient-profile-phase-actions">
                        </div>
                      )}
                    </div>
                  </div>
                </div>
              </div>
            ))}
          </div>
        </div>
      </div>
    </div>
  )


  const renderScheduleTab = () => (
    <div className="patient-profile-tab-content">
      <div className="patient-profile-schedule-header">
        <div>
          <h3>L·ªãch h·∫πn</h3>
          <p>L·ªãch s·ª≠ v√† l·ªãch h·∫πn s·∫Øp t·ªõi</p>
        </div>
        
      </div>


      <div className="patient-profile-schedule-section">
        <h4>L·ªãch h·∫πn s·∫Øp t·ªõi</h4>
        <div className="patient-profile-appointment-list">




          <div className="patient-profile-appointment-item patient-profile-upcoming">
            <div className="patient-profile-appointment-time">
              <span className="patient-profile-time-icon">üïò</span>
            </div>
            <div className="patient-profile-appointment-details">
              <h5>Si√™u √¢m theo d√µi</h5>
              <p>25/05/2024 | 10:15 - 10:45</p>
              <p>BS. Nguy·ªÖn Lan Anh</p>
              <div className="patient-profile-appointment-actions">
                {/* <button className="patient-profile-btn-outline-red">Chi ti·∫øt</button> */}
                
              </div>
            </div>
            <button className="patient-profile-reschedule-btn">ƒê√£ l√™n l·ªãch</button>
          </div>
        </div>
      </div>


      <div className="patient-profile-schedule-section">
        <h4>L·ªãch s·ª≠ cu·ªôc h·∫πn</h4>
        <div className="patient-profile-appointment-list">
          <div className="patient-profile-appointment-item patient-profile-completed">
            <div className="patient-profile-appointment-time">
              <span className="patient-profile-time-icon patient-profile-completed">‚úÖ</span>
            </div>
            <div className="patient-profile-appointment-details">
              <h5>T∆∞ v·∫•n</h5>
              <p>05/05/2024 | 14:00 - 14:30</p>
              <p>BS. Nguy·ªÖn Lan Anh</p>
              {/* <button className="patient-profile-btn-outline-red">Xem ghi ch√∫</button> */}
            </div>
            <span className="patient-profile-status-badge patient-profile-completed">Ho√†n th√†nh</span>
          </div>
        </div>
      </div>
    </div>
  )


  const renderNotesTab = () => (
    <div className="patient-profile-tab-content">
      <div className="patient-profile-notes-header">
        <div>
          <h3>Ghi ch√∫ kh√°m b·ªánh</h3>
          <p>Ghi ch√∫ v√† theo d√µi qu√° tr√¨nh ƒëi·ªÅu tr·ªã</p>
        </div>
        
      </div>


      <div className="patient-profile-notes-section">
        <h4>Ghi ch√∫ theo giai ƒëo·∫°n ƒëi·ªÅu tr·ªã</h4>
        <div className="patient-profile-notes-list">
          {treatmentPhases.map((phase) =>
            phase.notes.map((note, noteIndex) => (
              <div key={`${phase.id}-${noteIndex}`} className="patient-profile-note-item">
                <div className="patient-profile-note-header">
                  <div className="patient-profile-note-date">
                    <span className="patient-profile-date-icon">üìÖ</span>
                    <span>{note.date}</span>
                  </div>
                  <span className="patient-profile-note-type">{phase.title}</span>
                </div>
                <div className="patient-profile-note-content">
                  <h5>Ghi ch√∫ kh√°m:</h5>
                  <p>{note.content}</p>
                </div>
                <div className="patient-profile-note-footer">
                  <span className="patient-profile-doctor-name">{note.doctor}</span>
                  
                </div>
              </div>
            ))
          )}
        </div>
      </div>
    </div>
  )


  const renderResultsTab = () => (
    <div className="patient-profile-tab-content">
      <div className="patient-profile-results-header">
        <div>
          <h3>K·∫øt qu·∫£ x√©t nghi·ªám</h3>
          <p>L·ªãch s·ª≠ c√°c x√©t nghi·ªám v√† k·∫øt qu·∫£</p>
        </div>
        
      </div>


      <div className="patient-profile-results-by-phase">
        {treatmentPhases.map((phase) => {
          if (phase.results.length === 0) return null;


          return (
            <div key={phase.id} className="patient-profile-phase-results-container">
              <div className="patient-profile-phase-results-header">
                <h4>{phase.title}</h4>
                <span className="patient-profile-phase-period">{phase.period}</span>
              </div>


              <div className="patient-profile-results-list">
                {phase.results.map((result, resultIndex) => (
                  <div key={`${phase.id}-${resultIndex}`} className="patient-profile-result-item">
                    <div className="patient-profile-result-icon">
                      <span className="patient-profile-icon-purple">üìã</span>
                    </div>
                    <div className="patient-profile-result-details">
                      <h4>{result.name}</h4>
                      <p>Ng√†y: {result.date}</p>
                      <p>K·∫øt qu·∫£: {result.value}</p>
                      <p>Tr·∫°ng th√°i: <strong>{result.status}</strong></p>
                      <button className="patient-profile-btn-outline">Xem chi ti·∫øt</button>
                    </div>
                    <span className="patient-profile-status-badge patient-profile-completed">Ho√†n th√†nh</span>
                  </div>
                ))}
              </div>
            </div>
          );
        })}
      </div>
    </div>
  )


  const renderMedicationsTab = () => (
    <div className="patient-profile-tab-content">
      <div className="patient-profile-medications-header">
        <div>
          <h3>Thu·ªëc</h3>
          <p>Thu·ªëc hi·ªán t·∫°i v√† l·ªãch s·ª≠ thu·ªëc</p>
        </div>
      
      </div>


      <div className="patient-profile-medications-section">
        <h4>Thu·ªëc theo giai ƒëo·∫°n ƒëi·ªÅu tr·ªã</h4>
        <div className="patient-profile-medication-cards">
          {treatmentPhases
            .flatMap((phase) =>
              phase.medications.map((med, medIndex) => {
                const isActive = phase.status === 'active' && med.period.includes('2024') && !med.period.includes('D·ª± ki·∫øn');
                return {
                  key: `${phase.id}-${medIndex}`,
                  isActive,
                  phase,
                  med,
                  medIndex
                };
              })
            )
            .sort((a, b) => {
              // Thu·ªëc ƒëang d√πng (isActive = true) l√™n tr∆∞·ªõc
              if (a.isActive && !b.isActive) return -1;
              if (!a.isActive && b.isActive) return 1;
              return 0;
            })
            .map(({ key, isActive, phase, med }) => (
              <div key={key} className={`patient-profile-medication-card ${isActive ? 'patient-profile-active' : 'patient-profile-completed'}`}>
                <div className="patient-profile-med-header">
                  <h5>{med.name}</h5>
                  <span className={`patient-profile-status-badge ${isActive ? 'patient-profile-active' : 'patient-profile-completed'}`}>
                    {isActive ? 'ƒêang d√πng' : 'ƒê√£ ho√†n th√†nh'}
                  </span>
                </div>
                <div className="patient-profile-med-details">
                  <p>
                    <strong>C√°ch d√πng:</strong> {med.usage}
                  </p>
                  <p>
                    <strong>Th·ªùi gian:</strong> {med.period}
                  </p>
                  <p>
                    <strong>Giai ƒëo·∫°n:</strong> {phase.title.replace('Giai ƒëo·∫°n ', '')}
                  </p>
                </div>
                <div className="patient-profile-med-actions">
                  <button className="patient-profile-btn-outline-blue">Xem chi ti·∫øt</button>
                  
                </div>
              </div>
            ))
          }
        </div>
      </div>
    </div>
  )


  const renderTabContent = () => {
    switch (activeTab) {
      case "overview":
        return renderOverviewTab()
      case "schedule":
        return renderScheduleTab()
      case "notes":
        return renderNotesTab()
      case "results":
        return renderResultsTab()
      case "medications":
        return renderMedicationsTab()
      default:
        return renderOverviewTab()
    }
  }


  return (
    <div className="patient-profile">
      <div className="patient-profile-header">
        <div className="patient-profile-header-left">
          <a href="#" onClick={(e) => { e.preventDefault(); window.history.back(); }} className="patient-profile-back-btn">‚Üê Quay l·∫°i</a>
          <div className="patient-profile-header-info">
            <h1>H·ªì s∆° b·ªánh nh√¢n</h1>
            <div className="patient-profile-appointment-info">
              <span className="patient-profile-appointment-type">{patientData.currentAppointment.type}</span>
            
              {/* <span className="patient-profile-appointment-status">{patientData.currentAppointment.status}</span> */}
            </div>
            <p className="patient-profile-appointment-details">{patientData.currentAppointment.details}</p>
          </div>
        </div>
        <div className="patient-profile-header-actions">
          
        </div>
      </div>


      <div className="patient-profile-container">
        <div className="patient-profile-sidebar">
          <div className="patient-profile-patient-info">
            <div className="patient-profile-patient-avatar">
              <img src="/src/asset/ivf.jpg" alt="Patient Avatar" />
            </div>
            <div className="patient-profile-patient-details">
              <h2>{patientData.name}</h2>
              <p className="patient-profile-patient-id">ID: {patientData.id}</p>
              <span className="patient-profile-status-badge patient-profile-active">{patientData.status}</span>
            </div>
          </div>


          <div className="patient-profile-patient-basic-info">
            <div className="patient-profile-info-row">
              <span className="patient-profile-label">Tu·ªïi:</span>
              <span className="patient-profile-value">{patientData.age}</span>
            </div>
            <div className="patient-profile-info-row">
              <span className="patient-profile-label">Ng√†y sinh:</span>
              <span className="patient-profile-value">{patientData.birthDate}</span>
            </div>
            <div className="patient-profile-info-row">
              <span className="patient-profile-label">Gi·ªõi t√≠nh:</span>
              <span className="patient-profile-value patient-profile-gender-female">{patientData.gender}</span>
            </div>


            <div className="patient-profile-info-row">
              <span className="patient-profile-label">ƒêi·ªÅu tr·ªã:</span>
              <span className="patient-profile-value">{patientData.treatment}</span>
            </div>
            <div className="patient-profile-info-row">
              <span className="patient-profile-label">Ng√†y b·∫Øt ƒë·∫ßu:</span>
              <span className="patient-profile-value">{patientData.startDate}</span>
            </div>
            <div className="patient-profile-info-row">
              <span className="patient-profile-label">B√°c sƒ© ph·ª• tr√°ch:</span>
              <span className="patient-profile-value">{patientData.doctor}</span>
            </div>
          </div>


          <div className="patient-profile-collapsible-sections">
            <div className="patient-profile-section">
              <button className="patient-profile-section-header" onClick={() => toggleSection("medicalHistory")}>
                <span>Ti·ªÅn s·ª≠ b·ªánh</span>
                <span>{expandedSections.medicalHistory ? "‚ñ≤" : "‚ñº"}</span>
              </button>
              {expandedSections.medicalHistory && (
                <div className="patient-profile-section-content">
                  <ul>
                    {patientData.medicalHistory.map((item, index) => (
                      <li key={index}>{item}</li>
                    ))}
                  </ul>
                </div>
              )}
            </div>


            <div className="patient-profile-section">
              <button className="patient-profile-section-header" onClick={() => toggleSection("familyHistory")}>
                <span>Ti·ªÅn s·ª≠ gia ƒë√¨nh</span>
                <span>{expandedSections.familyHistory ? "‚ñ≤" : "‚ñº"}</span>
              </button>
              {expandedSections.familyHistory && (
                <div className="patient-profile-section-content">
                  <ul>
                    {patientData.familyHistory.map((item, index) => (
                      <li key={index}>{item}</li>
                    ))}
                  </ul>
                </div>
              )}
            </div>


            <div className="patient-profile-section">
              <button className="patient-profile-section-header" onClick={() => toggleSection("allergies")}>
                <span>D·ªã ·ª©ng</span>
                <span>{expandedSections.allergies ? "‚ñ≤" : "‚ñº"}</span>
              </button>
              {expandedSections.allergies && (
                <div className="patient-profile-section-content">
                  <ul>
                    {patientData.allergies.map((item, index) => (
                      <li key={index}>{item}</li>
                    ))}
                  </ul>
                </div>
              )}
            </div>


            <div className="patient-profile-section">
              <button className="patient-profile-section-header" onClick={() => toggleSection("medicalRecords")}>
                <span>L·ªãch s·ª≠ y t·∫ø</span>
                <span>{expandedSections.medicalRecords ? "‚ñ≤" : "‚ñº"}</span>
              </button>
              {expandedSections.medicalRecords && (
                <div className="patient-profile-section-content">
                  <div className="patient-profile-medical-record">
                    <div className="patient-profile-record-date">15/05/2024</div>
                    <div className="patient-profile-record-content">Si√™u √¢m theo d√µi - Ph√°t tri·ªÉn nang tr·ª©ng t·ªët</div>
                  </div>
                  <div className="patient-profile-medical-record">
                    <div className="patient-profile-record-date">10/05/2024</div>
                    <div className="patient-profile-record-content">X√©t nghi·ªám hormone - K·∫øt qu·∫£ trong gi·ªõi h·∫°n b√¨nh th∆∞·ªùng</div>
                  </div>
                  <div className="patient-profile-medical-record">
                    <div className="patient-profile-record-date">05/05/2024</div>
                    <div className="patient-profile-record-content">T∆∞ v·∫•n kh·ªüi ƒë·∫ßu chu k·ª≥ IVF #2</div>
                  </div>
                </div>
              )}
            </div>


            <div className="patient-profile-section">
              <button className="patient-profile-section-header" onClick={() => toggleSection("prescribedMeds")}>
                <span>Thu·ªëc ƒë√£ k√™</span>
                <span>{expandedSections.prescribedMeds ? "‚ñ≤" : "‚ñº"}</span>
              </button>
              {expandedSections.prescribedMeds && (
                <div className="patient-profile-section-content">
                  <div className="patient-profile-prescribed-med">
                    <div className="patient-profile-med-name">Gonal-F 450 IU</div>
                    <div className="patient-profile-med-usage">Ti√™m d∆∞·ªõi da, 1 l·∫ßn/ng√†y, bu·ªïi t·ªëi</div>
                    <div className="patient-profile-med-period">01/05/2024 - 15/05/2024</div>
                  </div>
                  <div className="patient-profile-prescribed-med">
                    <div className="patient-profile-med-name">Cetrotide 0.25mg</div>
                    <div className="patient-profile-med-usage">Ti√™m d∆∞·ªõi da, 1 l·∫ßn/ng√†y, bu·ªïi s√°ng</div>
                    <div className="patient-profile-med-period">10/05/2024 - 18/05/2024</div>
                  </div>
                </div>
              )}
            </div>
          </div>


          <div className="patient-profile-sidebar-actions">
            <button className="patient-profile-btn-outline">üí¨ Nh·∫Øn tin</button>
          </div>
        </div>


        <div className="patient-profile-main-content">
          <div className="patient-profile-tabs">
            {tabs.map((tab) => (
              <button
                key={tab.id}
                className={`patient-profile-tab ${activeTab === tab.id ? "patient-profile-active" : ""}`}
                onClick={() => setActiveTab(tab.id)}
              >
                <span>{tab.icon}</span>
                {tab.label}
              </button>
            ))}
          </div>


          {renderTabContent()}
        </div>
      </div>
    </div>
  )
}


export default PatientRecord


