import "./CusProfile.css";
import { useEffect, useState } from "react";
import CustomerAPI from "../../../../features/service/apiCustomer";

const ProfileLayout = () => {
  const [doctorInfo, setDoctorInfo] = useState({
    fullName: "L√™ VƒÉn L∆∞∆°ng",
    gender: "male",
    birthDate: "1985-03-15",
  });

  useEffect(() => {
    const fetchCustomerInfo = async () => {
      try {
        const res = await CustomerAPI.getCustomerInfo();
        const customer = res.data;
        setDoctorInfo({
          fullName: customer.name || "",
          gender: customer.gender || "",
          birthDate: customer.dob || "",
          phone: customer.phone || "",
          email: customer.email || "",
        });
      } catch (error) {
        console.error("Kh√¥ng l·∫•y ƒë∆∞·ª£c th√¥ng tin customer:", error);
      }
    };

    fetchCustomerInfo();
  }, []);

  const reviews = [
    {
      id: 1,
      patientName: "Ch·ªã Nguy·ªÖn Th·ªã Lan",
      rating: 5,
      date: "2024-01-15",
      comment:
        "B√°c sƒ© An r·∫•t t·∫≠n t√¢m v√† chuy√™n nghi·ªáp. Gi·∫£i th√≠ch r·∫•t k·ªπ v·ªÅ t√¨nh tr·∫°ng b·ªánh v√† c√°ch ƒëi·ªÅu tr·ªã. Sau 3 th√°ng ƒëi·ªÅu tr·ªã, t√¨nh tr·∫°ng tim m·∫°ch c·ªßa t√¥i ƒë√£ c·∫£i thi·ªán r√µ r·ªát.",
      avatar: "/placeholder.svg?height=40&width=40",
    },
    {
      id: 2,
      patientName: "Anh Tr·∫ßn Minh Ho√†ng",
      rating: 5,
      date: "2024-01-10",
      comment:
        "B√°c sƒ© c√≥ kinh nghi·ªám v√† ki·∫øn th·ª©c chuy√™n m√¥n cao. Th√°i ƒë·ªô th√¢n thi·ªán, l·∫Øng nghe b·ªánh nh√¢n. T√¥i r·∫•t h√†i l√≤ng v·ªõi d·ªãch v·ª• kh√°m v√† ƒëi·ªÅu tr·ªã.",
      avatar: "/placeholder.svg?height=40&width=40",
    },
    {
      id: 3,
      patientName: "C√¥ L√™ Th·ªã Mai",
      rating: 4,
      date: "2024-01-05",
      comment:
        "B√°c sƒ© kh√°m r·∫•t k·ªπ v√† chu ƒë√°o. Tuy nhi√™n th·ªùi gian ch·ªù h∆°i l√¢u m·ªôt ch√∫t. Nh∆∞ng nh√¨n chung t√¥i r·∫•t tin t∆∞·ªüng v√†o chuy√™n m√¥n c·ªßa b√°c sƒ©.",
      avatar: "/placeholder.svg?height=40&width=40",
    },
  ];

  const handleInputChange = (field, value) => {
    setDoctorInfo((prev) => ({
      ...prev,
      [field]: value,
    }));
  };

  const handleSave = async () => {
    try {
      // Format ng√†y sinh v·ªÅ d·∫°ng yyyy-MM-dd
      const formattedDob = new Date(doctorInfo.birthDate)
        .toISOString()
        .split("T")[0];

      const updatedData = {
        name: doctorInfo.fullName || "",
        gender: doctorInfo.gender || "",
        dob: formattedDob,
        phones: doctorInfo.phone || "",
        medicalHistory: "", // Optional, v·∫´n ƒë·ªÉ r·ªóng
      };

      const response = await CustomerAPI.updateCustomerInfo(updatedData);
      console.log("C·∫≠p nh·∫≠t th√†nh c√¥ng:", response);
      alert("ƒê√£ l∆∞u th√¥ng tin th√†nh c√¥ng!");
    } catch (error) {
      console.error("L·ªói khi l∆∞u th√¥ng tin:", error);
      alert("L∆∞u th√¥ng tin th·∫•t b·∫°i. Vui l√≤ng th·ª≠ l·∫°i.");
    }
  };

  const renderStars = (rating) => {
    return Array.from({ length: 5 }, (_, index) => (
      <span key={index} className={`star ${index < rating ? "filled" : ""}`}>
        ‚≠ê
      </span>
    ));
  };

  const averageRating =
    reviews.reduce((sum, review) => sum + review.rating, 0) / reviews.length;

  const formatDate = (dateString) => {
    const date = new Date(dateString);
    return date.toLocaleDateString("vi-VN");
  };

  return (
    <div className="profile-container">
      {/* Header */}
      <div className="profile-header">
        <div>
          <h2>H·ªì s∆° b·ªánh nh√¢n</h2>
          <p>Qu·∫£n l√Ω th√¥ng tin c√° nh√¢n</p>
        </div>
      </div>

      {/* Main Content - 2 columns */}
      <div className="profile-content">
        {/* Left Column - Doctor Information */}
        <div className="doctor-info-section">
          <h3>üë§ Th√¥ng Tin C√° Nh√¢n</h3>
          <div className="doctor-card">
            {/* <div className="doctor-avatar">
              <img src="/placeholder.svg?height=60&width=60" alt="Doctor Avatar" />
            </div> */}
            <div className="doctor-details">
              <div className="info-grid">
                <div className="info-item">
                  <label>Email</label>
                  <input
                    type="email"
                    className="edit-input"
                    value={doctorInfo.email || ""}
                    disabled
                  />
                </div>

                <div className="info-item">
                  <label>H·ªç v√† T√™n</label>
                  <input
                    type="text"
                    className="edit-input"
                    value={doctorInfo.fullName}
                    onChange={(e) =>
                      handleInputChange("fullName", e.target.value)
                    }
                    placeholder="Nh·∫≠p h·ªç v√† t√™n"
                  />
                </div>

                <div className="info-item">
                  <label>S·ªë ƒëi·ªán tho·∫°i</label>
                  <input
                    type="text"
                    className="edit-input"
                    value={doctorInfo.phone || ""}
                    onChange={(e) => handleInputChange("phone", e.target.value)}
                    placeholder="Nh·∫≠p s·ªë ƒëi·ªán tho·∫°i"
                  />
                </div>

                <div className="info-item">
                  <label>Gi·ªõi T√≠nh</label>
                  <select
                    className="edit-select"
                    value={doctorInfo.gender}
                    onChange={(e) =>
                      handleInputChange("gender", e.target.value)
                    }
                  >
                    <option value="male">Nam</option>
                    <option value="female">N·ªØ</option>
                  </select>
                </div>

                <div className="info-item">
                  <label>Ng√†y Sinh</label>
                  <input
                    type="date"
                    className="edit-input"
                    value={doctorInfo.birthDate}
                    onChange={(e) =>
                      handleInputChange("birthDate", e.target.value)
                    }
                  />
                </div>
              </div>

              <button className="btn-save" onClick={handleSave}>
                L∆∞u Th√¥ng Tin
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default ProfileLayout;
